'''
Задача 4. Модуль для проверки даты
Создайте модуль и напишите в нём функцию, которая получает на вход дату в
формате DD.MM.YYYY Функция возвращает истину, если дата может существовать
или ложь, если такая дата невозможна. Для простоты договоримся, что год
может быть в диапазоне [1, 9999]. Весь период (1 января 1 года - 31 декабря 9999
года) действует Григорианский календарь. Проверку года на високосность
вынести в отдельную защищённую функцию.
Подсказка № 1
Используйте метод split('.') для разделения строки даты на день, месяц и год.
Преобразуйте каждую из частей в целые числа с помощью map(int, ...).
Подсказка № 2
Проверьте, что месяц находится в диапазоне от 1 до 12 включительно. Если нет, дата
считается невалидной. Аналогично сделайте с годами и днями.
Подсказка № 3
Используйте datetime(year, month, day) для проверки корректности даты.
'''
from datetime import datetime

def _is_leap_year(year):
# Проверка года на високосность
   if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
      return True
   return False

def is_valid_date(date_string):
   try:
      # Разделяем строку на день, месяц и год
      day, month, year = map(int, date_string.split('.'))

# Проверяем, что месяц в диапазоне от 1 до 12
      if not (1 <= month <= 12):
         return False

# Проверяем, что год в диапазоне от 1 до 9999
      if not (1 <= year <= 9999):
         return False

# Проверяем корректность дня в месяце
      if month == 2:
         if _is_leap_year(year):
            if not (1 <= day <= 29):
               return False
         else:
            if not (1 <= day <= 28):
               return False
            elif month in {4, 6, 9, 11}:
               if not (1 <= day <= 30):
                  return False
            else:
               if not (1 <= day <= 31):
                  return False
            

# Проверяем корректность даты с помощью datetime
      datetime(year, month, day)
         
      return True
      
   except ValueError:
      
      return False

# Пример использования функции
date_str = "29.11.2024"
print(is_valid_date(date_str))  # Вывод: True

'''
Этот код включает функцию _is_leap_year для проверки високосного года и функцию is_valid_date для проверки корректности даты. Например, дата "29.02.2024" будет считаться валидной, так как 2024 год является високосным.
'''