'''
Задача 2. Совместное проживание
Чтобы понять, стоит ли ему жить с кем-то или лучше остаться в гордом
одиночестве, Артём решил провести необычное исследование. Для этого он
реализовал модель человека и модель дома.
Человек может (должны быть такие методы):
● есть (+ сытость, − еда);
● работать (− сытость, + деньги);
● играть (− сытость);
● ходить в магазин за едой (+ еда, − деньги);
● прожить один день (выбирает одно действие согласно описанному ниже
приоритету и выполняет его).
У человека есть (должны быть такие атрибуты):
● имя,
● степень сытости (изначально 50),
● дом.
В доме есть:
● холодильник с едой (изначально 50 еды),
● тумбочка с деньгами (изначально 0 денег).
Если сытость человека становится меньше нуля, человек умирает.
Логика действий человека определяется следующим образом:
1. Генерируется число кубика от 1 до 6.
2. Если сытость < 20, то нужно поесть.
3. Иначе, если еды в доме < 10, то сходить в магазин.
4. Иначе, если денег в доме < 50, то работать.
5. Иначе, если кубик равен 1, то работать.
6. Иначе, если кубик равен 2, то поесть.
7. Иначе играть.
По такой логике эксперимента человеку надо прожить 365 дней.
Реализуйте такую программу и создайте двух людей, живущих в одном доме.
Проверьте работу программы несколько раз.
Подсказка № 1
Используйте функцию random.randint(1, 6) для моделирования броска кубика. Это
поможет определить случайное действие, которое будет выполнять человек в течение
дня.
Подсказка № 2
Определите методы для каждого действия человека (например, eat, work, play,
shop_for_food), чтобы каждый метод изменял соответствующие атрибуты человека
и дома (сытость, еда, деньги).
Подсказка № 3
Создайте класс House, в котором будут храниться ресурсы (еда и деньги). Это поможет
легко управлять ресурсами и отслеживать их изменения в течение времени.
Подсказка № 4
Проверьте, не достигла ли сытость человека нуля, в методе live_day. Если сытость
упала ниже нуля, программа должна завершиться, чтобы указать на смерть
персонажа.
Подсказка № 5
Используйте цикл для моделирования жизни человека в течение 365 дней. Этот цикл
должен вызывать метод live_day каждый день и проверять, выжил ли человек.
'''
import random

class House:
   def __init__(self):
      self.food = 50
      self.money = 0

class Person:
   def __init__(self, name, house):
      self.name = name
      self.satiety = 50
      self.house = house

   def eat(self):
      if self.house.food > 0:
         self.satiety += 10
         self.house.food -= 10
         print(f"{self.name} поел. Сытость: {self.satiety}, Еда в доме: {self.house.food}")
      else:
         print(f"В доме нет еды для {self.name}.")

   def work(self):
      self.satiety -= 10
      self.house.money += 10
      print(f"{self.name} поработал. Сытость: {self.satiety}, Деньги в доме: {self.house.money}")

   def play(self):
      self.satiety -= 10
      print(f"{self.name} поиграл. Сытость: {self.satiety}")

   def shop_for_food(self):
      if self.house.money >= 10:
         self.house.food += 10
         self.house.money -= 10
         print(f"{self.name} сходил в магазин. Еда в доме: {self.house.food}, Деньги в доме: {self.house.money}")
      else:
         print(f"У {self.name} нет денег на еду.")

   def live_day(self):
      if self.satiety < 0:
         print(f"{self.name} умер от голода.")
         return False

      dice = random.randint(1, 6)
      if self.satiety < 20:
         self.eat()
      elif self.house.food < 10:
         self.shop_for_food()
      elif self.house.money < 50:
         self.work()
      elif dice == 1:
         self.work()
      elif dice == 2:
         self.eat()
      else:
         self.play()
         return True

# Создание дома и двух людей
house = House()
person1 = Person("Артём", house)
person2 = Person("Оля", house)

# Моделирование жизни на 365 дней
for day in range(1, 366):
   print(f"\nДень {day}:")
   if not person1.live_day():
      break
   if not person2.live_day():
      break