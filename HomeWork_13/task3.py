'''
Задача 3. Счастливое число
Напишите программу, которая запрашивает у пользователя число до тех пор, пока
сумма этих чисел не станет больше либо равна 777. Каждое введенное число при этом
дозаписывается в файл. Сделайте так, чтобы перед дозаписью программа с
вероятностью 1 к 13 выбрасывала пользователю случайное исключение и
завершалась.
Пример 1:
Введите число: 10
Введите число: 500
Введите число: 200
Введите число: 67
Вы успешно выполнили условие для выхода из порочного цикла!
Содержимое файла out_file.txt:
10
500
200
67
Пример 2:
Введите число: 10
Введите число: 500
Вас постигла неудача!
Содержимое файла out_file.txt:
10
Подсказка № 1
Используйте методы класса для обработки файлов. В классе создайте методы для
работы с файлами, такие как удаление файла и запись данных. Это улучшит
организацию кода и сделает его более читаемым.
Подсказка № 2
Обрабатывайте исключения для ввода данных. Используйте конструкцию try-except
для обработки исключений, возникающих при вводе данных пользователем. Это
гарантирует, что программа корректно реагирует на неправильный ввод и продолжает
работу.
Подсказка № 3
Реализуйте метод, который случайным образом выбрасывает исключения с
определенной вероятностью. Это можно сделать, используя функцию
random.randint() для генерации случайных чисел.
Подсказка № 4
Удаляйте файл перед началом записи, чтобы начать запись в новый файл, сначала
удалите существующий файл, если он есть. Это можно сделать с помощью метода
os.remove(). Убедитесь, что вы обрабатываете возможные ошибки при удалении
файла.
'''

import os
import random

class LuckyNumber:
   def __init__(self, filename): 
      self.filename = filename
      self.total = 0
      self.goal = 777

   def remove_file(self):
      if os.path.exists(self.filename):
         os.remove(self.filename)

   def write_number(self, number):
      with open(self.filename, "a") as file:
         file.write(f"{number}\n")

   def get_number(self):
      while True:
         try:
            number = int(input("Введите число: "))
            return number
         except ValueError:
            print("Пожалуйста, введите корректное число.")

   def random_exception(self):
      if random.randint(1, 13) == 1:
         raise Exception("Вас постигла неудача!")

   def run(self):
      self.remove_file()
      while self.total < self.goal:
         try:
            self.random_exception()
            number = self.get_number()
            self.total += number
            self.write_number(number)
         except Exception as e:
            print(e)
            break
      if self.total >= self.goal:
         print("Вы успешно выполнили условие для выхода из порочного цикла!")

if __name__ == "__main__":
   lucky_number = LuckyNumber("out_file.txt")
   lucky_number.run()

'''
Этот код включает:

1.Класс LuckyNumber, который управляет файлами и процессом ввода чисел.
2.Метод remove_file(), который удаляет файл перед началом записи.
3.Метод write_number(number), который записывает число в файл.
4.Метод get_number(), который запрашивает у пользователя число и обрабатывает исключения ввода.
5.Метод random_exception(), который с вероятностью 1 к 13 выбрасывает исключение.
6.Метод run(), который выполняет основной цикл программы.
'''